syntax = "proto3";
import "collab/common.proto";

package collab;

// Message sent when the origin attempt to sync the payload with a collab document.
message InitSync {
  // Message origin.
  CollabOrigin origin = 1;
  // Object id for the collab.
  string object_id = 2;
  // Collab type.
  CollabType collab_type = 3;
  // Workspace which the collab belongs to.
  string workspace_id = 4;
  // Message id for the sync.
  uint64 msg_id = 5;
  // Encoded yrs document state vector.
  bytes payload = 6;
}

// Update message sent from the origin to the collab.
message UpdateSync {
  // Message origin.
  CollabOrigin origin = 1;
  // Object id for the collab.
  string object_id = 2;
  // Message id for the sync.
  uint64 msg_id = 3;
  // Encoded yrs updates.
  bytes payload = 4;
}

// Metadata for ack message, to be deprecated.
message AckMeta {
  string data = 1;
  uint64 msg_id = 2;
}

message CollabAck {
  CollabOrigin origin = 1;
  string object_id = 2;
  // deprecated
  AckMeta meta = 3;
  bytes payload = 4;
  uint32 code = 5;
  uint64 msg_id = 6;
  uint32 seq_num = 7;
}

message ServerInit {
  CollabOrigin origin = 1;
  string object_id = 2;
  uint64 msg_id = 3;
  bytes payload = 4;
}

message AwarenessSync {
  CollabOrigin origin = 1;
  string object_id = 2;
  bytes payload = 3;
}

message BroadcastSync {
  CollabOrigin origin = 1;
  string object_id = 2;
  bytes payload = 3;
  uint32 seq_num = 4;
}

// Wrapper for init sync, for the case when the client is the origin.
message ClientInitSync {
  InitSync data = 1;
}

// Wrapper for update sync, for the case when the client is the origin.
message ClientUpdateSync {
  UpdateSync data = 1;
}
